;; Analyzed by ClojureScript 1.7.170
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name posh.core, :imports nil, :requires {gdom goog.dom, goog.dom goog.dom, r reagent.core, reagent.core reagent.core, d datascript.core, datascript.core datascript.core, posh.tx-match posh.tx-match}, :uses {tx-patterns-match? posh.tx-match, tx-match? posh.tx-match}, :defs {db-tx {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 47, :column 7, :end-line 47, :end-column 12, :arglists (quote ([patterns] [patterns query])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([patterns] [patterns query]), :arglists ([patterns] [patterns query]), :arglists-meta (nil nil)}}, :name posh.core/db-tx, :variadic false, :file "resources/public/js/posh/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([patterns] [patterns query]), :arglists ([patterns] [patterns query]), :arglists-meta (nil nil)}, :method-params ([patterns] [patterns query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists ([patterns] [patterns query])}, when-tx {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 77, :column 7, :end-line 77, :end-column 14, :arglists (quote ([patterns handler-fn]))}, :name posh.core/when-tx, :variadic false, :file "resources/public/js/posh/core.cljs", :end-column 14, :method-params ([patterns handler-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([patterns handler-fn]))}, newly-registered-tx-listeners {:name posh.core/newly-registered-tx-listeners, :file "resources/public/js/posh/core.cljs", :line 13, :column 1, :end-line 13, :end-column 35, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 13, :column 6, :end-line 13, :end-column 35}}, try-tx-listener {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 72, :column 7, :end-line 72, :end-column 22, :arglists (quote ([tx-report [patterns handler-fn]]))}, :name posh.core/try-tx-listener, :variadic false, :file "resources/public/js/posh/core.cljs", :end-column 22, :method-params ([tx-report p__22292]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tx-report [patterns handler-fn]]))}, posh-conn {:name posh.core/posh-conn, :file "resources/public/js/posh/core.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 9, :column 6, :end-line 9, :end-column 15}}, last-tx-report {:name posh.core/last-tx-report, :file "resources/public/js/posh/core.cljs", :line 11, :column 1, :end-line 11, :end-column 24, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 11, :column 10, :end-line 11, :end-column 24}}, tx-listeners {:name posh.core/tx-listeners, :file "resources/public/js/posh/core.cljs", :line 67, :column 1, :end-line 67, :end-column 18, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 67, :column 6, :end-line 67, :end-column 18}}, setup {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 18, :column 7, :end-line 18, :end-column 12, :arglists (quote ([uconn]))}, :name posh.core/setup, :variadic false, :file "resources/public/js/posh/core.cljs", :end-column 12, :method-params ([uconn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uconn]))}, transact {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 35, :column 7, :end-line 35, :end-column 15, :arglists (quote ([tx]))}, :name posh.core/transact, :variadic false, :file "resources/public/js/posh/core.cljs", :end-column 15, :method-params ([tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tx]))}, established-reactions {:name posh.core/established-reactions, :file "resources/public/js/posh/core.cljs", :line 45, :column 1, :end-line 45, :end-column 27, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/core.cljs", :line 45, :column 6, :end-line 45, :end-column 27}}}, :require-macros {reagent.ratom reagent.ratom}, :cljs.analyzer/constants {:seen #{:db-after :history :tx-data}, :order [:history :tx-data :db-after]}, :doc nil}