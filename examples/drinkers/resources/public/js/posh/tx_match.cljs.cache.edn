;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name posh.tx-match, :imports nil, :requires {d datascript.core, datascript.core datascript.core}, :uses nil, :defs {tx-pattern-match? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 14, :column 7, :end-line 14, :end-column 24, :arglists (quote ([pattern tx-datom]))}, :name posh.tx-match/tx-pattern-match?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 24, :method-params ([pattern tx-datom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pattern tx-datom]))}, tx-patterns-match? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 21, :column 7, :end-line 21, :end-column 25, :arglists (quote ([patterns tx-datoms]))}, :name posh.tx-match/tx-patterns-match?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 25, :method-params ([patterns tx-datoms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([patterns tx-datoms]))}, tx-pattern-match-q? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 43, :column 7, :end-line 43, :end-column 26, :arglists (quote ([pattern tx-datom]))}, :name posh.tx-match/tx-pattern-match-q?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 26, :method-params ([pattern tx-datom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pattern tx-datom]))}, tx-match? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 86, :column 7, :end-line 86, :end-column 16, :arglists (quote ([db patterns query tx-datoms]))}, :name posh.tx-match/tx-match?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 16, :method-params ([db patterns query tx-datoms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 4, :fn-var true, :arglists (quote ([db patterns query tx-datoms]))}, query-symbol? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 32, :column 7, :end-line 32, :end-column 20, :arglists (quote ([s]))}, :name posh.tx-match/query-symbol?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, build-query {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([vars query]))}, :name posh.tx-match/build-query, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 18, :method-params ([vars query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vars query]))}, tx-item-match-q? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([pattern-item tx-datom-item]))}, :name posh.tx-match/tx-item-match-q?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 23, :method-params ([pattern-item tx-datom-item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pattern-item tx-datom-item]))}, query-unifies? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 76, :column 7, :end-line 76, :end-column 21, :arglists (quote ([db vars query]))}, :name posh.tx-match/query-unifies?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 21, :method-params ([db vars query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db vars query]))}, tx-patterns-match-q? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 55, :column 7, :end-line 55, :end-column 27, :arglists (quote ([db patterns tx-datoms]))}, :name posh.tx-match/tx-patterns-match-q?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 27, :method-params ([db patterns tx-datoms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db patterns tx-datoms]))}, tx-item-match? {:protocol-inline nil, :meta {:file "/home/teddy/clojure/posh/examples/drinkers/resources/public/js/posh/tx_match.cljs", :line 7, :column 7, :end-line 7, :end-column 21, :arglists (quote ([pattern-item tx-datom-item]))}, :name posh.tx-match/tx-item-match?, :variadic false, :file "resources/public/js/posh/tx_match.cljs", :end-column 21, :method-params ([pattern-item tx-datom-item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pattern-item tx-datom-item]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:find :where :else _ $ :in}, :order [_ :else :find :in $ :where]}, :doc nil}